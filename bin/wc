#!/usr/bin/env ruby

# frozen_string_literal: true

require "date"
require "yaml"
require_relative "./ordinalize"

def log(message, level=:info)
  puts "[#{level.upcase}] #{message}"
end

def die(message)
  log(message, :error)
  exit 1
end

LOREM = <<~TXT.gsub("\n", " ").strip
  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
  incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
  exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure
  dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
  Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt
  mollit anim id est laborum.
TXT

DIGEST = {
  "date" => "",
  "title" => "TBD",
  "link" => "/404",
  "comments" => "/404",
  "recap" => LOREM
}.freeze

die("Requires 1 argument of date of week commencing") unless ARGV.length == 1

WC = begin
  Date.parse(ARGV.first)
rescue Date::Error => _e
  die("Invalid date (#{ARGV.first})")
end

die("Week commencing date must be a Monday (#{WC.ordinalize})") unless WC.monday?

SRC = (WC...WC + 7).map { |date| DIGEST.merge("date" => date) }.to_yaml
SRC_NAME = "wc-#{WC}.yml"
SRC_PATH = "./src/gamers/#{SRC_NAME}"

log("Week commencing: #{WC.ordinalize}")

die("File already exists: #{SRC_PATH}") if File.file?(SRC_PATH)

log("Creating file: #{SRC_PATH}")
File.open(SRC_PATH, "w") { |file| file.write(SRC) }
